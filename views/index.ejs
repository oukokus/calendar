<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>商品レビューページ</title>
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.4.0/css/bootstrap-reboot.min.css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
        <link type="text/css" rel="stylesheet" href="css/style.css">
    </head>
    <body>
        <h1>商品注文顧客管理システム</h1>
        <div id="app">
            <div class="calendar_area">
                <div class="calendar_header">
                    <p id="year_month_label"></p>
                    <button id="prev_month_btn" onClick="prev_month()"><i class="fas fa-angle-left"></i></button>
                    <button id="next_month_btn" onClick="next_month()"><i class="fas fa-angle-right"></i></button>
                </div>
                <div id="calendar_body"></div>
                <div id="modal" class="modal">
                    <div class="modal-content">
                        <table class="table">
                            <thead id="reviewArea">
                                <tr class="trClass">
                                    <th>注文者名</th>
                                    <th>注文者電話</th>
                                    <th>注文者住所</th>
                                    <th>注文商品</th>
                                    <th>個数</th>
                                    <th>価格</th>
                                </tr>
                            </thead>
                            <tbody id="tbodyId">
                                <% for (let i=0; i < sample3.length; i++) { %>
                                    <tr class="tbodyTr">
                                        <td class="name"><%- sample3[i].注文者名 %></td>
                                        <td><%- sample3[i].注文者電話 %></td>
                                        <td><%- sample3[i].注文者住所 %></td>
                                        <td><%- sample3[i].注文商品 %></td>
                                        <td class="time"><%- sample3[i].注文日付 %></td>
                                        <td><%- sample3[i].個数 %></td>
                                        <td><%- sample3[i].価格 %></td>
                                    </tr>
                                    <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div id="list">
                <table id="tableList">
                    <h2>商品注文顧客管理リスト</h2>
                    <button id="addBtn"><a href="/add">情報追加</a></button>
                    <thead>
                        <tr>
                            <th>注文者名</th>
                            <th>注文者電話</th>
                            <th>注文者住所</th>
                            <th>注文商品</th>
                            <th>注文日付</th>
                            <th>個数</th>
                            <th>価格</th>
                        </tr>
                    </thead>
                    <tbody id=tbodyList>
                        <% for (let i=0; i < sample3.length; i++) { %>
                            <tr class="trList">
                                <td><%- sample3[i].注文者名 %></td>
                                <td><%- sample3[i].注文者電話 %></td>
                                <td><%- sample3[i].注文者住所 %></td>
                                <td><%- sample3[i].注文商品 %></td>
                                <td class="listTime"><%- sample3[i].注文日付 %></td>
                                <td><%- sample3[i].個数 %></td>
                                <td><%- sample3[i].価格 %></td>
                            </tr>
                            <% } %>
                    </tbody>
                </table>
            </div>
        </div>
        </div>
    </body>
</html>
<script type="text/javascript">
    // 曜日の定義
    const week = ["日", "月", "火", "水", "木", "金", "土"];
    // 今日の日付
    let today = new Date();
    // 表示用の日付
    let showDate = new Date(today.getFullYear(), today.getMonth(), 1);
    // 表示された時
    window.onload = function () {
        // カレンダーの表示（引数には表示用の日付を設定）
        showCalendar(showDate);
    };

    /**
     * カレンダーの表示
     */
    function showCalendar(date) {
        // 年
        let year = date.getFullYear();
        // 月
        let month = date.getMonth() + 1;
        // ヘッダーの年月に表示する文字列
        let showDateStr = year + "年 " + month + "月";
        // ヘッダーの年月部分に埋め込み
        document.querySelector('#year_month_label').innerHTML = showDateStr;
        // カレンダーテーブルを作成する（HTMLが返却される）
        let calendarTable = createCalendarTable(year, month);
        // カレンダー表示部分に埋め込み
        document.querySelector('#calendar_body').innerHTML = calendarTable;


        //商品注文顧客管理リスト
        //月によって表示
        let getTrList = document.querySelectorAll(".trList")
        let getTableList = document.querySelector('#tableList')
        let getListTime = document.querySelectorAll('.listTime')
        for (let i = 0; i < getListTime.length; i++) {
            getTrList[i].style.display = 'none';
            let listMonth1 = getListTime[i].innerHTML.slice(0, 7)
            let listMonth2 = year + "-" + ("0" + (month))
            if (listMonth1 == listMonth2) {
                getTrList[i].style.display = 'table-row'
            }
        }
        //空の行を削除
        for (let i = 0; i < getTrList.length; i++) {
            if (getTrList[i].childNodes.item(1).innerText == "") {
                getTrList[i].remove()
            }
        }

        //カレンダーに表示
        let time = document.querySelectorAll(".time")
        let name = document.querySelectorAll(".name")
        let day = document.querySelectorAll(".with_date")
        for (let i = 0; i < time.length; i++) {
            let month1 = time[i].innerHTML.slice(0, 7)
            let month2 = year + "-" + ("0" + (month))
            let days = time[i].innerHTML.slice(-2) - 1
            if (month1 == month2)
                day[days].insertAdjacentHTML("beforeend", "<br>" + "<button onclick='btnClick(" + [i] + ")'  id='" + [i] + "' class='clBtn'>" + name[i].innerText + "</button>")
        }
    }

    //ポップアップの表示
    let tbodyTr = document.querySelectorAll(".tbodyTr")
    let time = document.querySelectorAll(".time")
    let modal = document.getElementById('modal')
    function btnClick(btn) {
        for (let i = 0; i < tbodyTr.length; i++) {
            time[i].style.display = 'none';
            modal.style.display = 'block';
            tbodyTr[i].style.display = 'none';
            tbodyTr[btn].style.display = 'table-row'
        }
    }
    document.getElementById('modal').addEventListener('click', function () {
        this.style.display = 'none';
    });

    /**
     * カレンダーテーブルの作成
     */
    function createCalendarTable(year, month) {
        // HTML用の変数
        let _html = '';
        // tableタグ
        _html += '<table class="calendar_tbl">';
        // テーブルのヘッダー（曜日）
        _html += '<tr>';
        for (let i = 0; i < week.length; i++) {
            _html += "<th>" + week[i] + "</th>";
        }
        _html += '</tr>';
        // ---------------------
        // 表示するカレンダー年月の1日の曜日を取得
        let startDayOfWeek = new Date(year, month - 1, 1).getDay();
        // 日付
        let countDay = 0;
        // 月の末日
        let monthOfEndDay = new Date(year, month, 0).getDate()
        // 6行分繰り返し
        for (let i = 0; i < 6; i++) {
            _html += '<tr>';
            // 7列（曜日の数）分繰り返し
            for (let j = 0; j < week.length; j++) {
                // １行目で開始曜日と同じ場合
                if (i == 0 && j == startDayOfWeek) {
                    // 日付+1
                    countDay++;
                    // tdタグ（日付有りが分かるようにクラス属性に"with_date"を設定）
                    _html += '<td class="with_date">' + countDay + '</td>';
                }
                // 日付が0以外で、日付が末日より小さい場合
                else if (countDay != 0 && countDay < monthOfEndDay) {
                    // 日付+1
                    countDay++;
                    // tdタグ（日付有りが分かるようにクラス属性に"with_date"を設定）
                    _html += '<td class="with_date">' + countDay + '</td>';
                }
                else {
                    // tdタグ（日付無しが分かるようにクラス属性に"no_date"を設定）
                    _html += '<td class="no_date"></td>';
                }
            }
            _html += '</tr>';
        }
        _html += '</table>';
        // 組み立てたHTMLを返却
        return _html;
    }

    /**
     * 前月
     */
    function prev_month() {
        // 表示用の日付の月-1を設定
        showDate.setMonth(showDate.getMonth() - 1);
        // カレンダーの表示（引数には表示用の日付を設定）
        showCalendar(showDate);
    }
    /**
     * 今日
     */
    function now_month() {
        // 表示用の日付に今日の日付を設定
        showDate = new Date();
        // カレンダーの表示（引数には表示用の日付を設定）
        showCalendar(showDate);

    }

    /**
     * 来月
     */
    function next_month() {
        // 表示用の日付の月+1を設定
        showDate.setMonth(showDate.getMonth() + 1);
        // カレンダーの表示（引数には表示用の日付を設定）
        showCalendar(showDate);
    }


//情報追加ページadd
    const updateView = () => {
        const pages = {
            "/add": `
    <h1 id="addh1">情報追加</h1>
        <form id="form" name="formname"   onsubmit="return submitAfterValidation()"  action='/' method="post" id="frm">
            <p class="pclass">注文者名:
<input id="newname1" type="text" name="注文者名"  placeholder="注文者名"></p>
            <div id="listName1" class="dclass"></div>
            <p class="pclass">注文者電話番号 : 
<input id="newname2" type="tel" name="注文者電話" placeholder="注文者電話番号"></p>
            <div id="listName2" class="dclass"></div>
            <p class="pclass">注文者住所 : 
<input id="newname3" type="text" name="注文者住所"  placeholder="注文者住所"></p>
<div id="listName3" class="dclass"></div>
<p class="pclass">注文日付 : 
<input id="newname4" type="date" name='注文日付'  ></p>    
<div id="listName4" class="dclass"></div>
<p class="pclass">注文商品 : 
<input id="newname5" type="text" name=注文商品  placeholder="注文商品"></p>
<div id="listName5" class="dclass"></div> <p class="pclass">個数 : 
<input id="newname6" type="number" name="個数"  placeholder="個数"></p>
<div id="listName6" class="dclass"></div>      <p class="pclass">価格 : 
<input id="newname7" type="price" name="価格"  placeholder="価格"></p>
<div id="listName7" class="dclass"></div>     
            <p class="pclass"><button id="submit-button"  >送信</button></p>
        </form>
    `,
        };
        const page = pages[window.location.pathname];
        const render = page || `<h1>404 : Not Found<h1>`;
        document.getElementById("app").innerHTML = render;
        const listName1 = document.getElementById("listName1");
        const listName2 = document.getElementById("listName2");
        const listName3 = document.getElementById("listName3");
        const listName4 = document.getElementById("listName4");
        const listName5 = document.getElementById("listName5");
        const listName6 = document.getElementById("listName6");
        const listName7 = document.getElementById("listName7");
        const newname1 = document.getElementById("newname1");
        const newname2 = document.getElementById("newname2");
        const newname3 = document.getElementById("newname3");
        const newname4 = document.getElementById("newname4");
        const newname5 = document.getElementById("newname5");
        const newname6 = document.getElementById("newname6");
        const newname7 = document.getElementById("newname7");
        const dclass = document.querySelectorAll(".dclass")
        let trueFalse = true;
        const form = document.getElementById("form")
        const submitButton = document.getElementById("submit-button")
        submitAfterValidation = () => {
            if (newname1.value == "") {
                listName1.innerHTML = "注文者名が未入力です";
                listName1.style.color = "red";
                trueFalse = false;
            } else {
                listName1.innerHTML = "";
            }
            if (newname2.value == "") {
                listName2.innerHTML = "電話番号が未入力です"
                listName2.style.color = "red"
                trueFalse = false;
            } else if (/^[0-9!-/:-@¥[-`{-~]*$/.test(newname2.value)) {
                listName2.innerHTML = "";
            } else {
                listName2.innerHTML = "半角数字で入力してください";
                listName2.style.color = "red";
                trueFalse = false;
            }
            if (newname3.value == "") {

                listName3.innerHTML = "注文者住所が未入力です";
                listName3.style.color = "red";
                trueFalse = false;
            } else {
                listName3.innerHTML = "";
            }
            if (newname4.value == "") {
                listName4.innerHTML = "注文日付が未入力です";
                listName4.style.color = "red";
                trueFalse = false;
            } else {
                listName4.innerHTML = "";
            }
            if (newname5.value == "") {
                listName5.innerHTML = "注文内容が未入力です";
                listName5.style.color = "red";
                trueFalse = false;
            } else {
                listName5.innerHTML = "";
            }
            if (newname6.value == "") {
                listName6.innerHTML = "個数が未入力です"
                listName6.style.color = "red"
                trueFalse = false;
            } else if (/^[0-9]*$/.test(newname6.value)) {
                listName6.textContent = "";
            } else {
                listName6.innerHTML = "半角数字で入力してください";
                listName6.style.color = "red";
                trueFalse = false;
            }
            if (newname7.value == "") {
                listName7.innerHTML = "価格が未入力です"
                listName7.style.color = "red"
                trueFalse = false;
            } else if (/^[0-9]*$/.test(newname7.value)) {
                listName7.textContent = "";

            } else {
                listName7.innerHTML = "半角数字で入力してください";
                listName7.style.color = "red";
                trueFalse = false;
            }
            if (dclass[0].innerHTML == "" && dclass[1].innerHTML == "" && dclass[2].innerHTML == "" && dclass[3].innerHTML == "" && dclass[4].innerHTML == "" && dclass[5].innerHTML == "" && dclass[6].innerHTML == "") {
                trueFalse = true;
            }
            return trueFalse
        }
    }

    document.querySelectorAll("a").forEach(a => {
        a.onclick = event => {
            event.preventDefault();
            window.history.pushState(null, "", a.href);
            updateView();
        };
    });

    window.addEventListener("popstate", () => {
        window.location.reload();
    });
</script>
